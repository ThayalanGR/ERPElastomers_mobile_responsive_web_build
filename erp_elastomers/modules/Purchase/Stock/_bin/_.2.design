<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template name="recursivesum">
	<xsl:param name="items" />
	<xsl:param name="sumos" select="0" />
	<xsl:param name="sumtr" select="0" />
	<xsl:param name="sumts" select="0" />
	<xsl:param name="sumcs" select="0" />
	<xsl:variable name="head" select="$items[1]" />
	<xsl:variable name="tail" select="$items[position()>1]" />
	<xsl:variable name="thissumos" select="number(translate($head/opening_stock,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumtr" select="number(translate($head/total_receipt,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumts" select="number(translate($head/total_issue,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumcs" select="number(translate($head/closing_stock,',','')) * number($head/ramrate)" />
	<xsl:choose>
		<xsl:when test="not($tail)">
			<td align="right"><xsl:value-of select="format-number(totOpenStock,'###,###,##0.000')" /></td>
			<td align="right">
				<xsl:choose>
					<xsl:when test="$sumos+$thissumos &gt; 0">
						<xsl:value-of select="format-number($sumos+$thissumos,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>
			</td>			
			<td  align="right"><xsl:value-of select="format-number(totReciepts,'###,###,##0.000')" /></td>
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumtr+$thissumtr &gt; 0">
						<xsl:value-of select="format-number($sumtr+$thissumtr,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>					
			</td>					
			<td  align="right"><xsl:value-of select="format-number(totIssues,'###,###,##0.000')" /></td>
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumts+$thissumts &gt; 0">
						<xsl:value-of select="format-number($sumts+$thissumts,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>				
			</td>					
			<td  align="right"><xsl:value-of select="format-number(totClsStock,'###,###,##0.000')" /></td>	
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumcs+$thissumcs &gt; 0">
						<xsl:value-of select="format-number($sumcs+$thissumcs,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>					
			</td>				
		</xsl:when>
		<xsl:otherwise>
			<xsl:call-template name="recursivesum">
				<xsl:with-param name="sumos" select="$sumos+$thissumos" />
				<xsl:with-param name="sumtr" select="$sumtr+$thissumtr" />
				<xsl:with-param name="sumts" select="$sumts+$thissumts" />
				<xsl:with-param name="sumcs" select="$sumcs+$thissumcs" />
				<xsl:with-param name="items" select="$tail" />
			</xsl:call-template>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>

<xsl:template name="recursivetotalsum">
	<xsl:param name="items" />
	<xsl:param name="sumos" select="0" />
	<xsl:param name="sumtr" select="0" />
	<xsl:param name="sumts" select="0" />
	<xsl:param name="sumcs" select="0" />
	<xsl:variable name="head" select="$items[1]" />
	<xsl:variable name="tail" select="$items[position()>1]" />
	<xsl:variable name="thissumos" select="number(translate($head/opening_stock,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumtr" select="number(translate($head/total_receipt,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumts" select="number(translate($head/total_issue,',','')) * number($head/ramrate)" />
	<xsl:variable name="thissumcs" select="number(translate($head/closing_stock,',','')) * number($head/ramrate)" />
	<xsl:choose>
		<xsl:when test="not($tail)">
			<td  align="right"><xsl:value-of select="format-number(openStockGrdTot,'###,###,##0.000')" /></td>
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumos+$thissumos &gt; 0">
						<xsl:value-of select="format-number($sumos+$thissumos,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>				
			</td>			
			<td  align="right"><xsl:value-of select="format-number(recieptsGrdTot,'###,###,##0.000')" /></td>
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumtr+$thissumtr &gt; 0">
						<xsl:value-of select="format-number($sumtr+$thissumtr,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>			
			</td>					
			<td  align="right"><xsl:value-of select="format-number(issuesGrdTot,'###,###,##0.000')" /></td>
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumts+$thissumts &gt; 0">
						<xsl:value-of select="format-number($sumts+$thissumts,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>			
			</td>					
			<td  align="right"><xsl:value-of select="format-number(clsStockGrdTot,'###,###,##0.000')" /></td>	
			<td  align="right">
				<xsl:choose>
					<xsl:when test="$sumcs+$thissumcs &gt; 0">
						<xsl:value-of select="format-number($sumcs+$thissumcs,'###,###,##0.00')" />
					</xsl:when>
					<xsl:otherwise>	
						0.00
					</xsl:otherwise>
				</xsl:choose>			
			</td>				
		</xsl:when>
		<xsl:otherwise>
			<xsl:call-template name="recursivetotalsum">
				<xsl:with-param name="sumos" select="$sumos+$thissumos" />
				<xsl:with-param name="sumtr" select="$sumtr+$thissumtr" />
				<xsl:with-param name="sumts" select="$sumts+$thissumts" />
				<xsl:with-param name="sumcs" select="$sumcs+$thissumcs" />
				<xsl:with-param name="items" select="$tail" />
			</xsl:call-template>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>

<xsl:template match="/">
	<table width="100%" border="0" class="print_table" cellspacing="0" cellpadding="0">
	<tr  style="font-size:8px;">
		<th style="width:2%" align="center">No</th>
		<th align="center" style="width:11%">RAM Name</th>
		<th style="width:11%">RAM Grade</th>
		<th style="width:9%" align="center">Opening</th>
		<th style="width:10%" align="center">Opening Value</th>
		<th style="width:9%" align="center">Receipts</th>
		<th style="width:10%" align="center">Receipts Value</th>
		<th style="width:9%" align="center">Issues</th>
		<th style="width:10%" align="center">Issues Value</th>
		<th style="width:9%" align="center">Closing</th>
		<th align="center">Closing Value</th>
	</tr>	
	<xsl:for-each select="rootxml/root/data" >
		<xsl:for-each select="row" >
			<xsl:for-each select="row/ramData" >
			<tr style="font-size:10px;">
				<xsl:if test="position() mod 2 != 0">
					<xsl:attribute name="class">content_rows_light</xsl:attribute>
				</xsl:if>
				<xsl:if test="position() mod 2 != 1">
					<xsl:attribute name="class">content_rows_dark</xsl:attribute>
				</xsl:if>
				<td>
					<xsl:value-of select="position()" />
				</td>
				<td>
					<xsl:value-of select="ramname" />
				</td>
				<td>
					<xsl:value-of select="ramgrade" />
				</td>
				<td align="right">
					<xsl:choose>
						<xsl:when test="opening_stock != ''">
							<xsl:value-of select="format-number(opening_stock,'###,###,##0.000')" />
						</xsl:when>
						<xsl:otherwise>
							0.000
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<td align="right">
					<xsl:value-of select="format-number(number(translate(opening_stock,',','')) * number(ramrate),'##,##,##,##0.00')" />
				</td>				
				<td align="right">
					<xsl:choose>
						<xsl:when test="total_receipt != ''">
							<xsl:value-of select="format-number(total_receipt,'###,###,##0.000')" />
						</xsl:when>
						<xsl:otherwise>
							-
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<td align="right">
					<xsl:choose>
						<xsl:when test="total_receipt != ''">
							<xsl:value-of select="format-number(number(translate(total_receipt,',','')) * number(ramrate),'##,##,##,##0.00')" />
						</xsl:when>
						<xsl:otherwise>
							-
						</xsl:otherwise>
					</xsl:choose>
				</td>				
				<td align="right">
					<xsl:choose>
						<xsl:when test="total_issue != ''">
							<xsl:value-of select="format-number(total_issue,'###,###,##0.000')" />
						</xsl:when>
						<xsl:otherwise>
							-
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<td align="right">
					<xsl:choose>
						<xsl:when test="total_issue != ''">
							<xsl:value-of select="format-number(number(translate(total_issue,',','')) * number(ramrate),'##,##,##,##0.00')" />
						</xsl:when>
						<xsl:otherwise>
							-
						</xsl:otherwise>
					</xsl:choose>
				</td>				
				<td align="right">
					<xsl:value-of select="format-number(closing_stock,'###,###,##0.000')" />
				</td>
				<td align="right">
					<xsl:value-of select="format-number(number(translate(closing_stock,',','')) * number(ramrate),'##,##,##,##0.00')" />
				</td>				
			</tr>
			</xsl:for-each>
		<tr style="font-weight:bold;font-size:10px;">
			<xsl:attribute name="class">content_rows_dark cust_subtot</xsl:attribute>
			<td align="left" ><xsl:value-of select="ramClass" /></td>
			<td>Total</td>
			<td><xsl:value-of select="className" /></td>		
			<xsl:call-template name="recursivesum">
				<xsl:with-param name="items" select="row/ramData" />
			</xsl:call-template>
		</tr>		
		</xsl:for-each>
	<tr style="font-weight:bolder;font-size:10px;">
		<xsl:attribute name="class">content_rows_dark</xsl:attribute>
		<td colspan="3" align="center" >Grand Total</td>
		<xsl:call-template name="recursivetotalsum">
			<xsl:with-param name="items" select="row/row/ramData" />
		</xsl:call-template>
	</tr>
	</xsl:for-each>
    </table>
</xsl:template>
</xsl:stylesheet>