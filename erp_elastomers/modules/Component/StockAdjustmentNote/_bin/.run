cntId			=	new Array();
cntName			=	new Array();
cntPrev			=	'';

$(document).ready(function(){
	$("#add_stkadjnote").button().click(function(){
		newStockAdjustmentNote();
	});
	
	$('#new_san_dialog').dialog({
		title:'New Stock Adjustment Note',
		width:700,
		resizable:false,
		modal:true,
		autoOpen:false,
		buttons:{
			'Generate':function(){
				if(typeof generateStockAdjustmentNote == "function"){
					confirmCont = '<table width="100%" >' +
								'<tr><td><b>Are you Sure to commit the Stock Adjustment Note?</b></td></tr>' +
								'</table>'
					$('#confirm_dialog').html(confirmCont).dialog({
						title:'Stock Adjustment Note',
						width:450,
						height:'auto',
						resizable:false,
						modal:true,
						buttons:{
							'Ok':function(){
								generateStockAdjustmentNote();
								$(this).dialog('close');
							},
							'Cancel':function(){
								$(this).dialog('close');
							}
						},
						close:function(){
							$(this).html('').dialog('destroy');
						}
					});	
				}
			},
			'Clear':function(){
				if(typeof clearStockAdjustmentNote == "function"){
					confirmCont = '<table width="100%" >' +
								'<tr><td><b>Are you Sure to clear the Stock Adjustment Note?</b></td></tr>' +
								'</table>'
					$('#confirm_dialog').html(confirmCont).dialog({
						title:'Stock Adjustment Note',
						width:450,
						height:'auto',
						resizable:false,
						modal:true,
						buttons:{
							'Ok':function(){
								clearStockAdjustmentNote();
								$(this).dialog('close');
							},
							'Cancel':function(){
								$(this).dialog('close');
							}
						},
						close:function(){
							$(this).html('').dialog('destroy');
						}
					});					
				}
			},
			'Cancel':function(){
				$(this).dialog('close');
			}
		},
		open:function(){
			$('#new_san_dialog .cnt_auto_list').autocomplete({
				source:cntName,
				close:function(event, ui){
					getKeyBookQty();
				}
			});
		},
		close:function(){
			$('#new_san_dialog form')[0].reset();
			$("#new_san_dialog .tbook_qty").html(0);
			$("#new_san_dialog .tphy_qty").html(0);
			$("#new_san_dialog .texcshrt_qty").html(0);
			$("#new_item_error").css("display", "none");
			$('#new_san_dialog .supplier_list .key_list tr:gt(0)').remove();
		}
	});
	
	$('#view_san_dialog').dialog({
		title:'View Stock Adjustment Note',
		width:700,
		resizable:false,
		modal:true,
		autoOpen:false,
		buttons:{
			'Close':function(){
				$(this).dialog('close');
			}
		},
		open:function(){},
		close:function(){
			$("#view_san_dialog #ViewSANList table tr:gt(0)").remove();
		}
	});	
	
	getProcessData();
	getComponentAtList();
});

function getProcessData(){
	processList		=	postback(actionFile, "", "POST", "XML");
	listPageData($("#content_body"), processList, XSLFile);
	enableRightButtons();
}

function enableRightButtons(){
	$("#content_body .view_button").click(function(e) {
		sanid	=	$(this).attr("sanid");
		viewSanEntry(sanid);
		e.stopImmediatePropagation();
    });
}

function getComponentAtList(){
	objCNTList	=	postback(actionFile, "type=CNTATLIST", "POST", "XML");
	cntId		=	new Array();
	cntName		=	new Array();
	$(objCNTList).find("row").each(function(index, element) {
		$this	=	$(element);
		cntId.push($this.find("cmpdid").html().trim());
		cntName.push($this.find("cmpdname").html().trim() + " - " + $this.find("cmpdrefno").html().trim());
    });
}

function getKeyBookQty(){
	cntSel	=	$("#new_san_dialog .cnt_auto_list").val();
	if(cntSel != null && cntSel != ""){
		// Get Component Id
		cntPos			=	cntName.inArrayNo(cntSel);
		if(cntPos > -1){
			cntid		=	cntId[cntPos];
			cntPrev		=	cntSel;
			objBookQty	=	postback(actionFile, "type=CNTBOOKQTY&cntid=" + cntid, "POST", "XML");
			$('#new_san_dialog .cnt_auto_list').attr("cntid", cntid);
			$("#new_san_dialog .key_list tr:gt(0)").remove();
			tbookQty	=	0;
			tphyQty		=	0;
			texcShrt	=	0;
			$(objBookQty).find("data row").each(function(index, element) {
				$this	=	$(element);
				bookQty	=	Number($this.find("avlqty").html());
				clsNme	=	(index%2)?"content_rows_dark":"content_rows_light";
				tbookQty	+=	bookQty;
				tphyQty		+=	bookQty;
                $("#new_san_dialog .key_list tr:last").after(
					'<tr class="' + clsNme + '"> \
						<td>' + $this.find("planref").html() + '</td> \
						<td align="right" style="padding-right:5px;color:' + ((isNaN(bookQty) || bookQty < 0)?'#ff0000':'#000') + '">' + bookQty.toCurrency(0) + '</td> \
						<td align="right"> \
							<input type="text" style="width:90%;text-align:right;" class="invisible_text" \
							value="' + bookQty + '" onfocus="FieldHiddenValue(this, \'in\', \'' + bookQty + '\')" \
							onblur="FieldHiddenValue(this, \'out\', \'' + bookQty + '\')" bookqty="' + bookQty + '" /> \
						</td> \
						<td align="right" class="diffamt" style="padding-right:5px;">0</td> \
					</tr>'
				);
            });
			$('#new_san_dialog #san_remarks').val($this.find("description").html());
			$('#new_san_dialog .tbook_qty').html(tbookQty.toCurrency(0));
			$('#new_san_dialog .tbook_qty').css('color', (tbookQty>=0)?'#000000':'#ff0000');
			$('#new_san_dialog .tphy_qty').html(tphyQty.toCurrency(0));
			$('#new_san_dialog .tphy_qty').css('color', (tphyQty>=0)?'#000000':'#ff0000');
			$('#new_san_dialog .texcshrt_qty').html(texcShrt.toCurrency(0));
			$('#new_san_dialog .texcshrt_qty').css('color', (texcShrt>=0)?'#000000':'#ff0000');
			
			updateOnKeyUp();
		}
		else{
			$("#new_san_dialog .cnt_auto_list").val(cntPrev);
		}
	}
}

function updateOnKeyUp(){
	$("#new_san_dialog .key_list input:text").keyup(function(e) {
		$this	=	$(this);
		bookQty	=	Number($this.attr("bookqty"));
		physQty	=	($this.val() != "" && Number($this.val().toNumber()) >= 0)?Number($this.val().toNumber()):bookQty;
		diffAmt	=	(physQty >= 0)?Math.round(physQty - bookQty):bookQty;
		$this.parent().parent().find(".diffamt").html(diffAmt.toCurrency(0));
		$this.parent().parent().find(".diffamt").css("color", ((diffAmt >= 0)?'#000':'#ff0000'));
		
		totPhyQty 	=	0;
		totExcShrt	=	0;
		$("#new_san_dialog .supplier_list table tr:gt(0)").each(function(index, element) {
			$this		=	$(element);
			bookQty		=	Number($this.find("input:text").attr("bookqty").toNumber());
			phyQty		=	($this.find("input:text").val())?$this.find("input:text").val().toNumber():-1;
			phyQty		=	(Number(phyQty) >= 0)?Number(phyQty):bookQty;
			excShrt		=	$this.find("td:eq(3)").html().toNumber();
			totPhyQty	+=	Number(phyQty);
			totExcShrt	+=	Number(excShrt);
		});
		$('#new_san_dialog .tphy_qty').html(totPhyQty.toCurrency());
		$('#new_san_dialog .tphy_qty').css('color', (totPhyQty>=0)?'#000000':'#ff0000');
		$('#new_san_dialog .texcshrt_qty').html(totExcShrt.toCurrency());
		$('#new_san_dialog .texcshrt_qty').css('color', (totExcShrt>=0)?'#000000':'#ff0000');
	});
}

function newStockAdjustmentNote(){
	$('#new_san_dialog').dialog("open");
}

function generateStockAdjustmentNote(){
	stkError	=	$("#new_item_error");
	stkRows		=	$('#new_san_dialog .supplier_list table tr:gt(0)');
	totSel		=	0;
	stkOutput	=	true;
	param		=	"type=ADDSAN";
	cmpdId		=	$('#new_san_dialog .cnt_auto_list').attr("cntid");
	remarks		=	$('#new_san_dialog #san_remarks').val();
	
	if(stkRows.length <= 0){
		displayError(stkError, "error", "<strong>Error !</strong> - Invalid Data / No Data found ! ! !");
		stkOutput	=	false;
		return false;
	}

	if(remarks == null || remarks.trim() == ""  ){
		displayError(stkError, "error", "<strong>Error !</strong> - Please enter proper remarks for creating this Stock Adjustment Note ! ! !");
		$('#new_san_dialog #san_remarks').focus();
		return false;
	}	
	
	
	param		+=	"&cmpdid=" + cmpdId +
					"&desc=" + remarks;
	
	stkRows.each(function(index, element) {
        $this	=	$(element);
		txtObj	=	$this.find("input:text");
		bookQty	=	txtObj.attr("bookqty").toNumber();
		txtVal	=	txtObj.val().toNumber();
		
		if(txtObj.val() != "" && !isNaN(txtVal) && txtVal != bookQty){
			if(txtVal < 0){
				stkOutput	=	false;
				displayError(stkError, "error", "<strong>Error !</strong> - Invalid Physical Qty. at Row " + (index+1) + " ! ! !");
				txtObj.focus();
				return false;
			}
			
			param	+=	"&mldkey[]=" + $this.find("td:eq(0)").html() + 
						"&bookqty[]=" + $this.find("td:eq(1)").html().toNumber() +
						"&phyqty[]=" + txtVal +
						"&excshrt[]=" + $this.find("td:eq(3)").html().toNumber();
			
			totSel++;
		}
    });
	
	if(stkOutput){
		if(totSel <= 0){
			displayError(stkError, "error", "<strong>Error !</strong> - Invalid Moulding / No Moulding Selected ! ! !");
			$('#new_san_dialog .supplier_list table tr:eq(1) input:text').focus();
			return false;
		}
		
		displayError(stkError, "highlight", "<div class='loading' style='float:left;margin-right:10px;' /> <strong>Adding Data to Server . . .</strong>", 0, false);
		//alert(param); return false;
		addSAN	=	postback(actionFile, param, "POST", "XML");
		sanStat	=	$(addSAN).find("addsan status").html();
		sanId	=	$(addSAN).find("addsan sanid").html();
		if(sanStat == "success"){
			$('#new_san_dialog').dialog("close");
			alert("Stock Adjustment Note No: " + sanId + " Created Successfully . . .");
			getProcessData();
		}
		else{
			displayError(stkError, "error", sanStat);
		}
	}
}

function viewSanEntry(sid){
	if(sid != null && sid != ""){
		innerContent	=	postback(actionFile, "type=SANDETAILS&sanid=" + sid, "POST", "XML");
		$("#view_san_dialog").dialog("open");
		$(innerContent).find("row").each(function(index, element) {
			excShrt	=	$(this).find("exc_shrt").html().toNumber();
			$("#view_san_dialog #ViewSANList table tr:last").after(
				"<tr class='" + ((index%2)?"content_rows_dark":"content_rows_light") + "'> \
					<td>" + $(this).find("planid").html() + "</td> \
					<td align='right'>" + $(this).find("bookqty").html().toCurrency(0) + "</td> \
					<td align='right'>" + $(this).find("physicalqty").html().toCurrency(0) + "</td> \
					<td align='right'" + ((excShrt<0)?" style='color:#ff0000;'":"") + ">" + $(this).find("exc_shrt").html().toCurrency(0) + "</td> \
				</tr>"
			);
        });
	}
}


function clearStockAdjustmentNote(){
	texcShrt	=	0;
	$("#new_san_dialog .key_list input:text").each(function(index, element) {
        $this		=	$(element);
		bookQty		=	Number($this.attr("bookqty"));
		texcShrt	+=	bookQty;
		$this.val("0.00").removeClass("normal_text").addClass("invisible_text");
		$this.parent().parent().find(".diffamt").html(bookQty);
		$this.parent().parent().find(".diffamt").css("color", ((bookQty >= 0)?'#000':'#ff0000'));
		$('#new_san_dialog .tphy_qty').html(0);
		$('#new_san_dialog .tphy_qty').css('color', '#000000');
		$('#new_san_dialog .texcshrt_qty').html(texcShrt.toCurrency());
		$('#new_san_dialog .texcshrt_qty').css('color', (texcShrt>=0)?'#000000':'#ff0000');
    });
	$("#new_san_dialog .key_list input:text:eq(0)").focus();
}


