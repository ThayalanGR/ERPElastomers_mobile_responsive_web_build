<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE xsl:stylesheet  [
	<!ENTITY nbsp   "&#160;">
	<!ENTITY copy   "&#169;">
	<!ENTITY reg    "&#174;">
	<!ENTITY trade  "&#8482;">
	<!ENTITY mdash  "&#8212;">
	<!ENTITY ldquo  "&#8220;">
	<!ENTITY rdquo  "&#8221;">
	<!ENTITY pound  "&#163;">
	<!ENTITY yen    "&#165;">
	<!ENTITY euro   "&#8364;">
]>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
   <xsl:template match="/"> 
		<table id="resultTable" class="print_table" border="0" cellpadding="6" cellspacing="0" width="100%">
			<thead>
				<tr style="font-size:8px;">
					<th width="4%">SNo</th>
					<th width="15%">Name</th>
					<th width="8%">Cpd. Qty Used<sup>Kg</sup></th>
					<th width="10%">Cpd. Cost <sup>Rs</sup></th>
					<th width="8%">Lifts<sup>No</sup></th>
					<th width="10%">Mold. Cost <sup>Rs</sup></th>
					<th width="10%">Trim. Cost <sup>Rs</sup></th>
					<th width="10%">Insp. Cost <sup>Rs</sup></th>
					<th width="10%">Sales Val. <sup>Rs</sup></th>
					<th width="10%">Contribution <sup>Rs</sup></th>	
					<th>Contrib. % </th>				
				</tr>
			</thead>
			<tbody>	
            <xsl:for-each select="xmldata/root/data/row">
				<tr style="font-size:8px;">
					<xsl:if test="position() mod 2 != 0">
						<xsl:attribute name="class">content_rows_light</xsl:attribute>
					</xsl:if>
					<xsl:if test="position() mod 2 != 1">
						<xsl:attribute name="class">content_rows_dark</xsl:attribute>
					</xsl:if>
					<td align="left">
						<xsl:value-of select="position()"/>
					</td>					
					<td align="left">
						<span>
							<xsl:choose>
								<xsl:when test="groupby = 'cusGroup'">
									<xsl:attribute name="cusgroup"><xsl:value-of select="dispname"/></xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="cusgroup"><xsl:value-of select="cusgroup"/></xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="groupby = 'cmpdProdGroup'">
									<xsl:attribute name="prodgroup"><xsl:value-of select="dispname"/></xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="prodgroup"><xsl:value-of select="prodgroup"/></xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="groupby = 'blankWgtGroup'">
									<xsl:attribute name="blankgroup"><xsl:value-of select="dispname"/></xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="blankgroup"><xsl:value-of select="blankgroup"/></xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:attribute name="compname"><xsl:value-of select="compname"/></xsl:attribute>
							<xsl:attribute name="step"><xsl:value-of select="step"/></xsl:attribute>
							<xsl:if test="step != 3">
								<xsl:attribute name="class">view_button link</xsl:attribute> 
								<xsl:choose>
									<xsl:when test="groupby = 'blankWgtGroup'">
										<xsl:value-of select="blankdispname"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="dispname"/>
									</xsl:otherwise>
								</xsl:choose>								
								
							</xsl:if>
							<xsl:if test="step = 3">
								<a>
									<xsl:attribute name="href">/Component/OutwardRegister/page=invoice/invID=<xsl:value-of select="planid"/></xsl:attribute>
									<xsl:attribute name="target">new</xsl:attribute>
									<xsl:value-of select="dispname"/>
								</a>
							</xsl:if>							
						</span>
						
					</td>					  
					<td align="right">
						<xsl:value-of select='format-number(cpdused,"##,##,##0")' />
					</td>
					<td align="right">
						<xsl:value-of select='format-number(compoundcost,"##,##,##0")' />
					</td>	
					<td align="right">
						<xsl:value-of select='format-number(totlifts,"##,##,##0")' />
					</td>
					<td align="right">
						<xsl:value-of select='format-number(moldcost,"##,##,##0")' />
					</td>	
					<td align="right">
						<xsl:value-of select='format-number(trimcost,"##,##,##0")' />
					</td>
					<td align="right">
						<xsl:value-of select='format-number(inspcost,"##,##,##0")' />
					</td>	
					<td align="right">
						<xsl:value-of select='format-number(salesval,"##,##,##0")' />
					</td>
					<td align="right">
						<xsl:value-of select='format-number(salesval - compoundcost - moldcost - trimcost -inspcost,"##,##,##0")' />
					</td>
					<td align="right">
						<xsl:value-of select='format-number(((salesval - compoundcost - moldcost - trimcost -inspcost) div salesval) * 100,"##,##,##0")' />
					</td>				
				</tr>
            </xsl:for-each>		
			</tbody> 
		</table>
    </xsl:template>		
</xsl:stylesheet>
		